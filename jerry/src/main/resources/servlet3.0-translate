## 2 The Servlet Interface
Servlet接口是Java Servlet
API的核心抽象,所有的servlets或者直接的实现这个接口，更常见的是，通过继承一个类来实现这个接口，在Java
Servlet
API里有两个类实现了这个接口，这两个类是GenericServlet和HttpServlet，大多数情况下，开发者只需要继承HttpServlet就可以了。

---
## 2.1 Request Handling Methods
基础的Servlet接口定义了一个service方法来处理客户端的请求，这个方法是被servlet容器路由到对应的servlet实例的请求所调用，
对于并发请求的处理通常是要求web应用开发者设计出的servlet能处理多线程在特定的时间访问service方法。通常Web容器在相同的servlet处理并发请求是通过
以不同的线程来并发执行service方法。

---

### 2.1.1 HTTP Specific Request Handling Methods
HttpServlet这个抽象子类在Servlet接口的基础上添加了一些额外的方法，这些方法在HttpServlet这个类中能够被service方法自动调用，以此来处理HTTP请求，这些方法是：
- **doGet** 处理HTTP的GET请求
- **doPost** 处理HTTP的POST请求
- **doPut** 处理HTTP的PUT请求
- **doDelete** 处理HTTP的DELETE请求
- **doHead** 处理HTTP的HEAD请求
- **doOptions** 处理HTTP的OPTIONS请求
- **doTrace** 处理HTTP的TRACE请求 

通常当开发以HTTP为基础的Servlet时，一个Servlet的开发者只需要关注doGet和doPost方法即可，其他的方法是被认为对HTTP编程非常熟悉的程序员来使用的。

---

### 2.1.2 Additional Methods
doPut和doDelete方法允许Servlet开发人员支持HTTP/1.1
使用这些特性的客户端。HttpServlet中的doHead方法是一种特殊形式，该方法只返回由
doGet方法产生的headers。doOptions方法响应HTTP方法所在的位置
由servlet支持。doTrace方法生成一个包含all的响应 跟踪请求中发送的头的实例。

### 2.1.3 Conditional GET Support
HttpServlet接口定义了一个getLastModified方法来支持有条件的GET操作，一个有条件的GET请求操作
只有在从指定的时间开始修改时才会这样做，在合适的情况下，这个方法的实现可能有助于网络资源的利用。
